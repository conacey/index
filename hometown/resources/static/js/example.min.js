(function e(t, n, r) {
  function s(o, u) {
    if (!n[o]) {
      if (!t[o]) {
        var a = typeof require == "function" && require;
        if (!u && a)
          return a(o, !0);
        if (i)
          return i(o, !0);
        var f = new Error("Cannot find module '" + o + "'");
        throw f.code = "MODULE_NOT_FOUND",
        f
      }
      var l = n[o] = {
        exports: {}
      };
      t[o][0].call(l.exports, function (e) {
        var n = t[o][1][e];
        return s(n
          ? n
          : e)
      }, l, l.exports, e, t, n, r)
    }
    return n[o].exports
  }
  var i = typeof require == "function" && require;
  for (var o = 0; o < r.length; o++)
    s(r[o]);
  return s
})({
  1: [
    function (require, module, exports) {
      'use strict';
      // var crossvent = require('crossvent');
      var sortable = $('sortable');

      dragula([$('left-defaults'), $('right-defaults')]);
      dragula([
        $('left-copy'), $('right-copy')
      ], {copy: true});
      dragula([$('left-events'), $('right-events')])
        .on('drag', function (el) {
          el.className = el
            .className
            .replace('ex-moved', '');
        })
        .on('drop', function (el) {
          el.className += ' ex-moved';
        })
        .on('over', function (el, container) {
          container.className += ' ex-over';
        })
        .on('out', function (el, container) {
          container.className = container
            .className
            .replace('ex-over', '');
        });
      dragula([
        $('left-rollbacks'), $('right-rollbacks')
      ], {revertOnSpill: true});
      dragula([
        $('left-lovehandles'), $('right-lovehandles')
      ], {
        moves: function (el, container, handle) {
          return handle.className === 'handle';
        }
      });

      dragula([
        $('left-rm-spill'), $('right-rm-spill')
      ], {removeOnSpill: true});
      dragula([
         $('left-copy-1tomany'), $('right-copy-1tomany')
          ], {
            copy: function (el, source) {
              return source === $('left-copy-1tomany');
            },
            accepts: function (el, target) {
              return target !== $('left-copy-1tomany');
            }
      });
      dragula([sortable]);

      function clickHandler(e) {
        var target = e.target;
        if (target === sortable) {
          return;
        }
        target.innerHTML += ' [click!]';

        setTimeout(function () {
          target.innerHTML = target
            .innerHTML
            .replace(/ \[click!\]/g, '');
        }, 500);
      }
      function $(id) {
        return document.getElementById(id);
      }

    }
  ],

 }, {}, [1])
